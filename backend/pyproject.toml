[tool.poetry]
authors = ["Hironsan <hiroki.nakayama.py@gmail.com>"]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]
description = "doccano, text annotation tool for machine learning practitioners"
documentation = "https://doccano.github.io/doccano/"
exclude = [
  "backend/filepond-temp-uploads",
  "backend/media",
  "backend/db.sqlite3*",
  "backend/poetry.lock",
]
homepage = "https://doccano.github.io/doccano/"
include = [
  "backend/client/dist/**/*",
  "backend/staticfiles/**/*",
]
license = "MIT"
name = "doccano"
packages = [
  {include = "backend", from = ".."},
]
readme = "README.md"
repository = "https://github.com/doccano/doccano"
version = "1.8.4"

[tool.poetry.extras]
mssql = ["django-mssql-backend"]
postgresql = ["psycopg2-binary"]

[tool.poetry.scripts]
doccano = 'backend.cli:main'

[tool.poetry.dependencies]
Django = "^4.1.7"
SQLAlchemy = "^1.4.31"
auto-labeling-pipeline = "^0.1.21"
celery = "^5.2.3"
chardet = "^4.0.0"
dj-database-url = "^0.5.0"
dj-rest-auth = {extras = ["with_social"], version = "^2.2.5"}
django-allauth = "^0.52.0"
django-celery-results = "2.4.0"
django-cleanup = "^6.0.0"
django-cors-headers = "^3.13.0"
django-drf-filepond = "^0.5.0"
django-filter = "^22.1"
django-health-check = "^3.16.5"
django-polymorphic = "^3.1.0"
django-rest-polymorphic = "^0.1.9"
django-storages = {extras = ["google"], version = "^1.13.1"}
djangorestframework = "^3.14.0"
djangorestframework-xml = "^2.0.0"
drf-yasg = "^1.21.5"
environs = "^9.5.0"
filetype = "^1.0.10"
flower = "^1.2.0"
furl = "^2.1.3"
gunicorn = "^23.0.0"
pandas = "^1.4.2"
pydantic = "^2.0.3"
pyexcel = "^0.7.0"
pyexcel-xlsx = "^0.6.0"
python = "^3.8"
seqeval = "^1.2.2"
waitress = "^2.0.0"
whitenoise = "^6.0.0"

[tool.poetry.dev-dependencies]
autopep8 = "^1.6.0"
black = "^22.1.0"
coverage = "^6.3.1"
flake8 = "^4.0.1"
isort = {extras = ["pyproject"], version = "^5.10.1"}
model-mommy = "^2.0.0"
mypy = "^1.4.1"
pyproject-flake8 = "^0.0.1-alpha.2"
taskipy = "^1.10.1"
types-chardet = "^4.0.3"
types-requests = "^2.27.10"
types-waitress = "^2.0.6"
unittest-xml-reporting = "^3.2.0"
watchdog = "^2.1.6"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry-dynamic-versioning]
enable = false

[tool.black]
include = '\.pyi?$'
line-length = 120
target-version = ['py37', 'py38']

[tool.flake8]
filename = "*.py"
ignore = "E203,E266,W503,"
max-complexity = 18
max-line-length = 120

[tool.mypy]
exclude = [
  "migrations",
  "config",
]
ignore_missing_imports = true
python_version = "3.8"
show_error_codes = true

[tool.isort]
include_trailing_comma = true
known_first_party = [
  "api",
  "auto_labeling",
  "config",
  "data_export",
  "data_import",
  "examples",
  "label_types",
  "labels",
  "metrics",
  "projects",
  "roles",
  "users",
  "social",
]
known_local_folder = [
  "api",
  "auto_labeling",
  "config",
  "data_export",
  "data_import",
  "examples",
  "label_types",
  "labels",
  "metrics",
  "projects",
  "roles",
  "users",
  "social",
]
multi_line_output = 3
profile = "black"
skip = [".venv", "migrations"]

[tool.taskipy.tasks]
black = "black --check ."
collectstatic = "python manage.py collectstatic --noinput"
flake8 = "pflake8 --filename \"*.py\" --extend-exclude \"*/migrations\""
isort = "isort . -c"
migrate = "python manage.py migrate"
mypy = "mypy --namespace-packages --explicit-package-bases ."
test = "python manage.py test --pattern=\"test*.py\""
wait_for_db = "python manage.py wait_for_db"
